digraph TokenBudgetAdvisor {
  // Graph settings
  graph [rankdir=TB, splines=ortho, nodesep=0.5, ranksep=0.8, bgcolor=white]
  node [shape=box, style="rounded,filled", fillcolor=lightblue, fontname="Arial", fontsize=10]
  edge [fontname="Arial", fontsize=9]

  // Start
  start [label="Start\nTask Needs Execution", shape=ellipse, fillcolor=lightgreen]

  // Phase 1: Budget Assessment
  subgraph cluster_phase1 {
    label="Phase 1: Budget Assessment"
    style=filled
    fillcolor=lightyellow

    retrieve_usage [label="Retrieve Current\nToken Usage"]
    calc_remaining [label="Calculate\nRemaining Budget"]
    apply_buffer [label="Apply Safety\nBuffer (15%)"]
    calc_available [label="Calculate\nAvailable Tokens"]
    assess_status [label="Assess Status\n(healthy/caution/warning/critical)"]
    load_history [label="Load Historical\nUsage Patterns"]
  }

  // Phase 2: Task Complexity Analysis
  subgraph cluster_phase2 {
    label="Phase 2: Task Complexity Analysis"
    style=filled
    fillcolor=lightcyan

    infer_type [label="Infer Task Type\n(feature/refactor/debug)"]
    assign_base [label="Assign Base\nToken Estimate"]
    identify_multipliers [label="Identify Complexity\nMultipliers"]
    calc_total [label="Calculate Total\nEstimate"]
    assess_confidence [label="Assess Confidence\n(low/medium/high)"]
    document_factors [label="Document All\nFactors"]
  }

  // Phase 3: Chunking Strategy
  subgraph cluster_phase3 {
    label="Phase 3: Chunking Strategy"
    style=filled
    fillcolor=lavender

    spawn_planner [label="Spawn Planner\nAgent", shape=hexagon, fillcolor=orange]
    check_fit [label="Check if Task\nFits in Budget (85%)"]
    decompose_phases [label="Decompose into\nLogical Phases"]
    calc_chunks [label="Calculate Chunk\nSizes (40% ideal)"]
    define_deps [label="Define Chunk\nDependencies"]
    plan_communication [label="Plan Inter-Chunk\nCommunication"]
  }

  // Phase 4: Priority Optimization
  subgraph cluster_phase4 {
    label="Phase 4: Priority Optimization"
    style=filled
    fillcolor=lightpink

    calc_scores [label="Calculate Priority\nScore for Each Chunk"]
    sort_priority [label="Sort by Priority\n(high to low)"]
    identify_critical [label="Identify Critical\nPath Chunks"]
    flag_quickwins [label="Flag Quick Win\nOpportunities"]
    mark_deferrable [label="Mark Deferrable\nLow-Priority Work"]
  }

  // Phase 5: Execution Plan Generation
  subgraph cluster_phase5 {
    label="Phase 5: Execution Plan Generation"
    style=filled
    fillcolor=lightgoldenrodyellow

    format_plan [label="Format\nComprehensive Plan"]
    create_tracking [label="Create Budget\nTracking Table"]
    define_checkpoints [label="Define Checkpoint\nCommands"]
    doc_contingency [label="Document\nContingency Strategies"]
    add_rollback [label="Add Rollback\nProcedures"]
    store_plan [label="Store Final Plan\nin Memory"]
  }

  // Decision nodes
  budget_status [label="Budget\nStatus?", shape=diamond, fillcolor=lightyellow]
  fits_budget [label="Fits in 85%\nof Available?", shape=diamond, fillcolor=lightyellow]
  actual_within [label="Actual Within\nEstimate ±20%?", shape=diamond, fillcolor=lightyellow]
  more_chunks [label="More\nChunks?", shape=diamond, fillcolor=lightyellow]

  // Execution nodes
  execute_chunk [label="Execute Chunk N", shape=box, fillcolor=lightcoral]
  checkpoint [label="Checkpoint:\nTrack Actual Usage", shape=box, fillcolor=lightcoral]
  adjust_chunks [label="Adjust Remaining\nChunk Estimates", shape=box, fillcolor=lightcoral]

  // Hook integration nodes
  pre_hook [label="Pre-Task Hook\nStart Budget Analysis", shape=parallelogram, fillcolor=lightgray]
  mem_store1 [label="Memory Store\nBudget Assessment", shape=parallelogram, fillcolor=lightgray]
  mem_store2 [label="Memory Store\nComplexity Estimate", shape=parallelogram, fillcolor=lightgray]
  mem_store3 [label="Memory Store\nChunking Strategy", shape=parallelogram, fillcolor=lightgray]
  mem_store4 [label="Memory Store\nExecution Plan", shape=parallelogram, fillcolor=lightgray]
  checkpoint_hook [label="Post-Task Hook\nChunk Complete", shape=parallelogram, fillcolor=lightgray]
  final_hook [label="Post-Task Hook\nFinal Metrics", shape=parallelogram, fillcolor=lightgray]

  // Output nodes
  output_assessment [label="Budget Assessment\nJSON", shape=note, fillcolor=white]
  output_complexity [label="Complexity Estimate\nJSON", shape=note, fillcolor=white]
  output_strategy [label="Chunking Strategy\nJSON", shape=note, fillcolor=white]
  output_plan [label="Execution Plan\nMarkdown", shape=note, fillcolor=white]

  // Warning nodes
  warn_critical [label="⚠ Budget Critical\nMinimal Scope Only", shape=box, style="filled,bold", fillcolor=red]
  warn_tight [label="⚠ Budget Tight\nConservative Chunking", shape=box, style="filled,bold", fillcolor=orange]

  // End
  end [label="End\nTask Complete +\nMetrics Updated", shape=ellipse, fillcolor=lightcoral]

  // Main flow
  start -> pre_hook
  pre_hook -> retrieve_usage

  // Phase 1 flow
  retrieve_usage -> calc_remaining
  calc_remaining -> apply_buffer
  apply_buffer -> calc_available
  calc_available -> assess_status
  assess_status -> load_history
  load_history -> output_assessment
  load_history -> mem_store1

  // Budget status decision
  mem_store1 -> budget_status
  budget_status -> warn_critical [label="Critical (>90%)"]
  budget_status -> warn_tight [label="Warning (>75%)"]
  budget_status -> infer_type [label="Caution/Healthy"]

  warn_critical -> end [label="Abort or minimal scope"]
  warn_tight -> infer_type [label="Proceed cautiously"]

  // Phase 2 flow
  infer_type -> assign_base
  assign_base -> identify_multipliers
  identify_multipliers -> calc_total
  calc_total -> assess_confidence
  assess_confidence -> document_factors
  document_factors -> output_complexity
  document_factors -> mem_store2

  // Phase 3 flow
  mem_store2 -> spawn_planner
  spawn_planner -> check_fit
  check_fit -> fits_budget

  fits_budget -> store_plan [label="Yes: Single chunk"]
  fits_budget -> decompose_phases [label="No: Multi-chunk"]

  decompose_phases -> calc_chunks
  calc_chunks -> define_deps
  define_deps -> plan_communication
  plan_communication -> output_strategy
  plan_communication -> mem_store3

  // Phase 4 flow
  mem_store3 -> calc_scores
  calc_scores -> sort_priority
  sort_priority -> identify_critical
  identify_critical -> flag_quickwins
  flag_quickwins -> mark_deferrable

  // Phase 5 flow
  mark_deferrable -> format_plan
  format_plan -> create_tracking
  create_tracking -> define_checkpoints
  define_checkpoints -> doc_contingency
  doc_contingency -> add_rollback
  add_rollback -> store_plan
  store_plan -> output_plan
  store_plan -> mem_store4

  // Execution loop
  mem_store4 -> execute_chunk
  execute_chunk -> checkpoint
  checkpoint -> checkpoint_hook
  checkpoint_hook -> actual_within

  actual_within -> more_chunks [label="Yes: On track"]
  actual_within -> adjust_chunks [label="No: Off estimate"]

  adjust_chunks -> more_chunks

  more_chunks -> execute_chunk [label="Yes"]
  more_chunks -> final_hook [label="No"]

  final_hook -> end

  // Legend
  subgraph cluster_legend {
    label="Legend"
    style=filled
    fillcolor=white

    leg_phase [label="Process Step", shape=box, style="rounded,filled", fillcolor=lightblue]
    leg_decision [label="Decision Point", shape=diamond, fillcolor=lightyellow]
    leg_agent [label="Agent Spawn", shape=hexagon, fillcolor=orange]
    leg_hook [label="Hook Integration", shape=parallelogram, fillcolor=lightgray]
    leg_output [label="Output Artifact", shape=note, fillcolor=white]
    leg_exec [label="Execution Phase", shape=box, fillcolor=lightcoral]
    leg_warn [label="Warning/Alert", shape=box, style="filled,bold", fillcolor=orange]
  }
}
