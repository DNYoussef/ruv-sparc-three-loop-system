digraph InteractivePlanner {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start
    start [shape=ellipse, label="Start:\nProject Request", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nComprehensive\nSpecification", fillcolor=green, fontcolor=white];

    // Initial Assessment
    subgraph cluster_assessment {
        label="Initial Assessment";
        fillcolor=lightyellow;
        style=filled;

        parse_request [label="Parse User\nRequest"];
        assess_complexity [label="Assess Project\nComplexity"];
        check_existing_spec [label="Check for\nExisting Spec"];

        parse_request -> assess_complexity -> check_existing_spec;
    }

    // Decision on approach
    approach_decision [shape=diamond, label="Has Detailed\nSpec Already?", fillcolor=yellow];

    // Skip to synthesis if spec exists
    skip_to_synthesis [label="Use Existing\nSpecification", fillcolor=lightblue];

    // Question Strategy
    subgraph cluster_strategy {
        label="Question Strategy Design";
        fillcolor=lightcyan;
        style=filled;

        determine_batches [label="Determine Number\nof Batches Needed"];
        design_categories [label="Design Question\nCategories"];
        plan_progression [label="Plan Question\nProgression"];

        determine_batches -> design_categories -> plan_progression;
    }

    // Batch counter
    batch_counter [shape=box, label="Batch Counter:\nStart = 1", fillcolor=lightyellow];

    // Question Batch Creation
    subgraph cluster_batch_creation {
        label="Question Batch Creation (Max 4)";
        fillcolor=lightblue;
        style=filled;

        design_q1 [label="Design\nQuestion 1"];
        design_q2 [label="Design\nQuestion 2"];
        design_q3 [label="Design\nQuestion 3"];
        design_q4 [label="Design\nQuestion 4"];

        design_q1 -> design_q2 -> design_q3 -> design_q4;
    }

    // Validate questions
    validate_questions [label="Validate:\n- Orthogonal options\n- Clear descriptions\n- Proper multiSelect\n- Headers <12 chars", fillcolor=lightsalmon];

    // Ask questions
    ask_user [label="Present Questions\nto User", fillcolor=lightgreen];

    // Collect answers
    collect_answers [label="Collect User\nAnswers", fillcolor=lightgreen];

    // Synthesize batch
    synthesize_batch [label="Synthesize Batch\nInsights", fillcolor=lightblue];

    // Check if more batches needed
    more_batches_decision [shape=diamond, label="More Batches\nNeeded?", fillcolor=yellow];

    // Increment counter
    increment_counter [label="Increment\nBatch Counter", fillcolor=lightyellow];

    // Check total questions
    question_count_check [shape=diamond, label="Sufficient\nCoverage?\n(20-30 questions)", fillcolor=yellow];

    // Warning if too few
    too_few_warning [shape=octagon, label="WARNING:\nInsufficient\nCoverage", fillcolor=orange];

    // Final Synthesis
    subgraph cluster_synthesis {
        label="Final Synthesis";
        fillcolor=lightgreen;
        style=filled;

        aggregate_answers [label="Aggregate All\nAnswers"];
        identify_conflicts [label="Identify\nConflicts/Gaps"];
        create_spec [label="Create\nSpecification\nDocument"];

        aggregate_answers -> identify_conflicts -> create_spec;
    }

    // Confirmation
    confirm_understanding [shape=diamond, label="User Confirms\nUnderstanding?", fillcolor=yellow];

    // Flow
    start -> parse_request;
    check_existing_spec -> approach_decision;

    approach_decision -> skip_to_synthesis [label="yes"];
    approach_decision -> determine_batches [label="no"];

    plan_progression -> batch_counter;
    batch_counter -> design_q1 [lhead=cluster_batch_creation];

    design_q4 -> validate_questions;
    validate_questions -> ask_user;
    ask_user -> collect_answers;
    collect_answers -> synthesize_batch;

    synthesize_batch -> more_batches_decision;
    more_batches_decision -> increment_counter [label="yes"];
    increment_counter -> design_q1 [label="next batch"];

    more_batches_decision -> question_count_check [label="no"];

    question_count_check -> aggregate_answers [label="yes\n(20-30 total)"];
    question_count_check -> too_few_warning [label="no\n(<20 total)"];
    too_few_warning -> increment_counter [label="add more batches"];

    skip_to_synthesis -> aggregate_answers;

    create_spec -> confirm_understanding;
    confirm_understanding -> end [label="yes"];
    confirm_understanding -> design_q1 [label="no\nclarify", style=dashed];

    // External references
    tool_constraints [shape=cylinder, label="AskUserQuestion:\n- Max 4 questions\n- 2-4 options each\n- multiSelect available\n- 'Other' auto-added", fillcolor=lightcoral];
    ask_user -> tool_constraints [style=dashed, label="uses"];

    question_categories [shape=folder, label="Categories:\n1. Core Functionality\n2. Technical Architecture\n3. User Experience\n4. Quality & Scale\n5. Constraints", fillcolor=lightyellow];
    design_categories -> question_categories [style=dashed, label="references"];

    labelloc="t";
    label="Interactive Planner: Comprehensive Requirement Gathering";
    fontsize=16;
    fontname="Arial Bold";
}
