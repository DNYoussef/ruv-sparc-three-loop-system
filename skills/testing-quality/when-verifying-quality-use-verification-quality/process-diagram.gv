digraph QualityVerification {
  // Graph styling
  graph [rankdir=TB, fontname="Arial", fontsize=12, splines=ortho, nodesep=0.8, ranksep=1.0];
  node [shape=box, style="rounded,filled", fontname="Arial", fontsize=11, fillcolor="#E3F2FD", color="#1976D2", penwidth=2];
  edge [fontname="Arial", fontsize=10, color="#424242", penwidth=1.5];

  // Title
  label=<<B>Quality Verification and Validation</B><BR/><FONT POINT-SIZE="10">Comprehensive Quality Assessment with Certification Gates</FONT>>;
  labelloc=t;
  fontsize=16;

  // Main workflow nodes
  start [label="Build\nTriggered", shape=ellipse, fillcolor="#C8E6C9"];
  init [label="Initialize\nVerification\nWorkflow", fillcolor="#FFF9C4"];

  // Phase 1: Static Analysis
  phase1_start [label="Phase 1:\nStatic Analysis", fillcolor="#FFCDD2", style="rounded,filled,bold"];
  code_analyzer [label="Code Analyzer\nAgent", fillcolor="#FFEBEE"];

  sonarqube [label="SonarQube Scan\n• Maintainability\n• Complexity\n• Code Smells"];
  eslint [label="ESLint Analysis\n• Code Quality\n• Best Practices"];
  complexity [label="Complexity\nMetrics\n• Cyclomatic\n• Cognitive\n• Halstead"];
  duplication [label="Duplication\nDetection\n• jscpd\n• Threshold <5%"];

  static_report [label="Static Analysis\nReport\n• Maintainability: 67.3\n• Complexity: 8.2\n• Duplication: 3.8%", fillcolor="#FFE0B2"];
  static_store [label="Store:\nswarm/code-analyzer/\nstatic-metrics", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 2: Dynamic Testing
  phase2_start [label="Phase 2:\nDynamic Testing", fillcolor="#F8BBD0", style="rounded,filled,bold"];
  tester1 [label="Tester Agent", fillcolor="#FCE4EC"];

  unit_tests [label="Unit Tests\n• Jest + Coverage\n• 342 tests"];
  integration_tests [label="Integration Tests\n• API + DB\n• 89 tests"];
  e2e_tests [label="E2E Tests\n• Cypress/Playwright\n• 42 tests"];
  coverage [label="Coverage\nAnalysis\n• Statements: 91.2%\n• Branches: 87.4%"];

  testing_report [label="Testing Report\n• Pass Rate: 98.1%\n• Coverage: 91.2%\n• Flaky Tests: 3", fillcolor="#FFE0B2"];
  testing_store [label="Store:\nswarm/tester/\ndynamic-results", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 3: Integration Validation
  phase3_start [label="Phase 3:\nIntegration\nValidation", fillcolor="#D1C4E9", style="rounded,filled,bold"];
  tester2 [label="Tester Agent", fillcolor="#EDE7F6"];

  service_health [label="Service Health\n• PostgreSQL\n• Redis\n• RabbitMQ"];
  api_contracts [label="API Contracts\n• Pact\n• OpenAPI\n• Postman"];
  data_flow [label="Data Flow\n• Cart→Payment\n• Order→Fulfillment"];

  integration_report [label="Integration Report\n• Service Health: 100%\n• Contracts: Valid\n• Pass Rate: 96.6%", fillcolor="#FFE0B2"];
  integration_store [label="Store:\nswarm/tester/\nintegration-results", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 4: Certification
  phase4_start [label="Phase 4:\nCertification", fillcolor="#B2DFDB", style="rounded,filled,bold"];
  validator [label="Production\nValidator Agent", fillcolor="#E0F2F1"];

  quality_gates [label="Quality Gates\nEvaluation\n• 28 Gates\n• Weighted Score"];
  compliance [label="Compliance\nChecks\n• Security\n• Accessibility\n• Privacy\n• Performance"];
  signoff [label="Stakeholder\nSign-Off\n• QA ✅\n• Security ✅\n• Performance ✅\n• Compliance ✅"];

  cert_report [label="Certification\nReport\n• Score: 87.3/100\n• Approved: Yes", fillcolor="#FFE0B2"];
  cert_store [label="Store:\nswarm/production-validator/\ncertification", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 5: Report Generation
  phase5_start [label="Phase 5:\nReport Generation", fillcolor="#C5CAE9", style="rounded,filled,bold"];
  reporter [label="Production\nValidator Agent", fillcolor="#E8EAF6"];

  aggregate [label="Aggregate\nResults\n• All Phases\n• All Metrics"];
  executive_summary [label="Executive\nSummary\n• Key Metrics\n• Status\n• Risks"];
  detailed_findings [label="Detailed\nFindings\n• Per Phase\n• Recommendations"];
  visualizations [label="Visualizations\n• Trends\n• Heatmaps\n• Charts"];
  export_formats [label="Export Formats\n• Markdown\n• HTML\n• PDF"];

  final_report [label="Comprehensive\nQuality Report\n(Multi-Format)", fillcolor="#FFE0B2"];
  final_store [label="Store:\nswarm/production-validator/\nfinal-report", shape=cylinder, fillcolor="#E1F5FE"];

  // Decision
  decision [label="Certification\nScore ≥ 80\nAND\nAll Gates Pass?", shape=diamond, fillcolor="#FFECB3", style="filled"];

  approved [label="APPROVED FOR\nPRODUCTION\n✅", fillcolor="#C8E6C9", style="rounded,filled,bold"];
  rejected [label="CHANGES\nREQUIRED\n⚠️", fillcolor="#FFCDD2", style="rounded,filled,bold"];

  notify [label="Notify\nStakeholders\n& Post Results", fillcolor="#FFF9C4"];

  end [label="Verification\nComplete", shape=ellipse, fillcolor="#C8E6C9"];

  // Main flow
  start -> init;
  init -> phase1_start;

  // Phase 1 flow
  phase1_start -> code_analyzer;
  code_analyzer -> sonarqube;
  code_analyzer -> eslint;
  code_analyzer -> complexity;
  code_analyzer -> duplication;

  sonarqube -> static_report;
  eslint -> static_report;
  complexity -> static_report;
  duplication -> static_report;

  static_report -> static_store;
  static_store -> phase2_start;

  // Phase 2 flow
  phase2_start -> tester1;
  tester1 -> unit_tests;
  tester1 -> integration_tests;
  tester1 -> e2e_tests;
  tester1 -> coverage;

  unit_tests -> testing_report;
  integration_tests -> testing_report;
  e2e_tests -> testing_report;
  coverage -> testing_report;

  testing_report -> testing_store;
  testing_store -> phase3_start;

  // Phase 3 flow
  phase3_start -> tester2;
  tester2 -> service_health;
  tester2 -> api_contracts;
  tester2 -> data_flow;

  service_health -> integration_report;
  api_contracts -> integration_report;
  data_flow -> integration_report;

  integration_report -> integration_store;
  integration_store -> phase4_start;

  // Phase 4 flow
  phase4_start -> validator;
  validator -> quality_gates;
  validator -> compliance;
  validator -> signoff;

  quality_gates -> cert_report;
  compliance -> cert_report;
  signoff -> cert_report;

  cert_report -> cert_store;
  cert_store -> phase5_start;

  // Phase 5 flow
  phase5_start -> reporter;
  reporter -> aggregate;
  aggregate -> executive_summary;
  aggregate -> detailed_findings;
  aggregate -> visualizations;
  aggregate -> export_formats;

  executive_summary -> final_report;
  detailed_findings -> final_report;
  visualizations -> final_report;
  export_formats -> final_report;

  final_report -> final_store;
  final_store -> decision;

  // Decision branches
  decision -> approved [label="Yes\n(Score ≥80)", color="#4CAF50", penwidth=2];
  decision -> rejected [label="No\n(Score <80)", color="#F44336", penwidth=2];

  // Final steps
  approved -> notify;
  rejected -> notify;
  notify -> end;

  // Visual grouping with subgraphs
  subgraph cluster_phase1 {
    label="Phase 1: Static Analysis (10 min)";
    style=dashed;
    color="#F44336";
    sonarqube; eslint; complexity; duplication; static_report; static_store;
  }

  subgraph cluster_phase2 {
    label="Phase 2: Dynamic Testing (15 min)";
    style=dashed;
    color="#E91E63";
    unit_tests; integration_tests; e2e_tests; coverage; testing_report; testing_store;
  }

  subgraph cluster_phase3 {
    label="Phase 3: Integration Validation (10 min)";
    style=dashed;
    color="#9C27B0";
    service_health; api_contracts; data_flow; integration_report; integration_store;
  }

  subgraph cluster_phase4 {
    label="Phase 4: Certification (5 min)";
    style=dashed;
    color="#009688";
    quality_gates; compliance; signoff; cert_report; cert_store;
  }

  subgraph cluster_phase5 {
    label="Phase 5: Report Generation (5 min)";
    style=dashed;
    color="#3F51B5";
    aggregate; executive_summary; detailed_findings; visualizations; export_formats; final_report; final_store;
  }

  // Legend
  subgraph cluster_legend {
    label="Legend";
    style=filled;
    fillcolor="#FAFAFA";
    color="#9E9E9E";

    leg_phase [label="Phase Start", fillcolor="#FFCDD2", style="rounded,filled,bold"];
    leg_agent [label="Agent", fillcolor="#FFEBEE"];
    leg_action [label="Action", fillcolor="#E3F2FD"];
    leg_report [label="Report", fillcolor="#FFE0B2"];
    leg_memory [label="Memory", shape=cylinder, fillcolor="#E1F5FE"];
    leg_decision [label="Decision", shape=diamond, fillcolor="#FFECB3"];

    leg_phase -> leg_agent -> leg_action -> leg_report -> leg_memory -> leg_decision [style=invis];
  }
}
