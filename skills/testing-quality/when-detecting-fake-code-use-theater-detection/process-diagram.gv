digraph theater_detection {
  rankdir=LR;
  node [shape=box, style=rounded, fontname="Arial"];
  edge [fontname="Arial"];

  // Semantic styling
  start [label="Start\nTheater\nDetection", shape=ellipse, style=filled, fillcolor=lightgreen];
  end [label="Detection\nComplete", shape=ellipse, style=filled, fillcolor=lightblue];

  // Phase nodes
  phase1 [label="Phase 1\nScan Codebase\n(Pattern Detection)", shape=box, style="rounded,filled", fillcolor=lightyellow];
  phase2 [label="Phase 2\nAnalyze\nImplementation", shape=box, style="rounded,filled", fillcolor=lightyellow];
  phase3 [label="Phase 3\nTest Execution\n(Validation)", shape=box, style="rounded,filled", fillcolor=lightyellow];
  phase4 [label="Phase 4\nReport Findings", shape=box, style="rounded,filled", fillcolor=lightyellow];
  phase5 [label="Phase 5\nFix Issues", shape=box, style="rounded,filled", fillcolor=lightyellow];

  // Decision points
  issues_found [label="Suspicious\nPatterns?", shape=diamond, style=filled, fillcolor=lightcoral];
  theater_confirmed [label="Theater\nConfirmed?", shape=diamond, style=filled, fillcolor=lightcoral];
  fixes_needed [label="Fixes\nRequired?", shape=diamond, style=filled, fillcolor=lightcoral];

  // Workflow
  start -> phase1;
  phase1 -> issues_found;
  issues_found -> end [label="No Issues"];
  issues_found -> phase2 [label="Yes"];
  phase2 -> phase3 [label="Analyze Complete"];
  phase3 -> theater_confirmed;
  theater_confirmed -> phase4 [label="Yes\n(Theater Detected)"];
  theater_confirmed -> end [label="No\n(False Positives)"];
  phase4 -> fixes_needed;
  fixes_needed -> phase5 [label="Yes"];
  fixes_needed -> end [label="No\n(Report Only)"];
  phase5 -> end [label="Fixes Applied"];

  // Agents subgraph
  subgraph cluster_agents {
    label="Agents";
    style=dashed;
    fontname="Arial";

    analyzer [label="Code Analyzer\n(Phases 1-2)", shape=component, fillcolor=lightcyan, style=filled];
    tester [label="Tester\n(Phase 3)", shape=component, fillcolor=lightcyan, style=filled];
    reviewer [label="Reviewer\n(Phase 4)", shape=component, fillcolor=lightcyan, style=filled];
    coder [label="Coder\n(Phase 5)", shape=component, fillcolor=lightcyan, style=filled];
  }

  // Memory coordination subgraph
  subgraph cluster_memory {
    label="Memory Coordination";
    style=dashed;
    fontname="Arial";

    mem1 [label="Phase 1:\nScan Results", shape=note, fillcolor=wheat, style=filled];
    mem2 [label="Phase 2:\nTheater Analysis", shape=note, fillcolor=wheat, style=filled];
    mem3 [label="Phase 3:\nExecution Results", shape=note, fillcolor=wheat, style=filled];
    mem4 [label="Phase 4:\nFinal Report", shape=note, fillcolor=wheat, style=filled];
    mem5 [label="Phase 5:\nFixes Applied", shape=note, fillcolor=wheat, style=filled];
  }

  // Memory connections (dashed)
  phase1 -> mem1 [style=dashed, label="store"];
  mem1 -> phase2 [style=dashed, label="retrieve"];
  phase2 -> mem2 [style=dashed, label="store"];
  mem2 -> phase3 [style=dashed, label="retrieve"];
  phase3 -> mem3 [style=dashed, label="store"];
  mem3 -> phase4 [style=dashed, label="retrieve"];
  phase4 -> mem4 [style=dashed, label="store"];
  mem4 -> phase5 [style=dashed, label="retrieve"];
  phase5 -> mem5 [style=dashed, label="store"];

  // Detection patterns
  subgraph cluster_patterns {
    label="Theater Patterns Detected";
    style=dashed;
    fontname="Arial";

    pattern1 [label="Empty\nCatch Blocks", shape=note, fillcolor=mistyrose, style=filled];
    pattern2 [label="No-Op\nFunctions", shape=note, fillcolor=mistyrose, style=filled];
    pattern3 [label="Always-Pass\nTests", shape=note, fillcolor=mistyrose, style=filled];
    pattern4 [label="Trivial\nReturns", shape=note, fillcolor=mistyrose, style=filled];
    pattern5 [label="Mock Code in\nProduction", shape=note, fillcolor=mistyrose, style=filled];
  }

  phase1 -> pattern1 [style=dotted];
  phase1 -> pattern2 [style=dotted];
  phase1 -> pattern3 [style=dotted];
  phase1 -> pattern4 [style=dotted];
  phase1 -> pattern5 [style=dotted];

  // Quality gates
  gate1 [label="QG1:\nScan\nComplete?", shape=hexagon, fillcolor=lightpink, style=filled];
  gate2 [label="QG2:\nAnalysis\nValid?", shape=hexagon, fillcolor=lightpink, style=filled];
  gate3 [label="QG3:\nNo False\nPositives?", shape=hexagon, fillcolor=lightpink, style=filled];

  phase1 -> gate1 [style=dotted];
  gate1 -> issues_found [style=dotted, label="Pass"];
  phase2 -> gate2 [style=dotted];
  gate2 -> phase3 [style=dotted, label="Pass"];
  phase3 -> gate3 [style=dotted];
  gate3 -> theater_confirmed [style=dotted, label="Pass"];

  // Legend
  subgraph cluster_legend {
    label="Legend";
    style=dashed;
    fontname="Arial";

    legend_phase [label="Phase", shape=box, style="rounded,filled", fillcolor=lightyellow];
    legend_decision [label="Decision", shape=diamond, style=filled, fillcolor=lightcoral];
    legend_gate [label="Quality Gate", shape=hexagon, fillcolor=lightpink, style=filled];
    legend_memory [label="Memory Store", shape=note, fillcolor=wheat, style=filled];
    legend_pattern [label="Theater Pattern", shape=note, fillcolor=mistyrose, style=filled];
  }
}
