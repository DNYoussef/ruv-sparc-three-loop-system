digraph CodeReviewAssistant {
  // Graph styling
  graph [rankdir=TB, fontname="Arial", fontsize=12, splines=ortho, nodesep=0.8, ranksep=1.0];
  node [shape=box, style="rounded,filled", fontname="Arial", fontsize=11, fillcolor="#E3F2FD", color="#1976D2", penwidth=2];
  edge [fontname="Arial", fontsize=10, color="#424242", penwidth=1.5];

  // Title
  label=<<B>Comprehensive Code Review Assistant</B><BR/><FONT POINT-SIZE="10">Multi-Agent Swarm PR Review with Merge Readiness Assessment</FONT>>;
  labelloc=t;
  fontsize=16;

  // Main workflow nodes
  start [label="Pull Request\nSubmitted", shape=ellipse, fillcolor="#C8E6C9"];
  init [label="Initialize Review\nSwarm\n(Hierarchical)", fillcolor="#FFF9C4"];
  coordinate [label="Deploy 4 Agents\nin Parallel", fillcolor="#FFE0B2"];

  // Phase 1: Security Review
  security_agent [label="Security Manager\nAgent", fillcolor="#FFCDD2"];
  security_scan [label="Phase 1:\nSecurity Review\n• OWASP Top 10\n• Dependency Audit\n• Secret Scanning", fillcolor="#FFEBEE"];
  security_auth [label="Authentication\nAnalysis\n• JWT Validation\n• Password Hashing\n• SQL Injection"];
  security_report [label="Security Report\n• Critical Issues\n• High Priority\n• Auto-Fix"];
  security_store [label="Store in Memory:\nswarm/security-manager/\nfindings", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 2: Performance Review
  perf_agent [label="Performance\nAnalyzer Agent", fillcolor="#F8BBD0"];
  perf_scan [label="Phase 2:\nPerformance Review\n• Static Analysis\n• Runtime Profiling\n• Bottleneck Detection", fillcolor="#FCE4EC"];
  perf_metrics [label="Performance\nMetrics\n• Latency P95\n• Memory Usage\n• Bundle Size"];
  perf_report [label="Performance Report\n• P0 Bottlenecks\n• Optimization Recs\n• Impact Estimate"];
  perf_store [label="Store in Memory:\nswarm/performance-analyzer/\nmetrics", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 3: Style Review
  style_agent [label="Code Review\nSwarm Agent", fillcolor="#D1C4E9"];
  style_scan [label="Phase 3:\nStyle Review\n• ESLint\n• Prettier\n• TypeScript", fillcolor="#EDE7F6"];
  style_naming [label="Naming\nConventions\n• PascalCase\n• camelCase\n• kebab-case"];
  style_report [label="Style Report\n• ESLint Errors\n• Prettier Violations\n• Auto-Fix Script"];
  style_store [label="Store in Memory:\nswarm/code-review-swarm/\nstyle", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 4: Test Coverage
  test_agent [label="Tester Agent", fillcolor="#B2DFDB"];
  test_scan [label="Phase 4:\nTest Coverage Review\n• Coverage Analysis\n• Test Quality\n• Edge Cases", fillcolor="#E0F2F1"];
  test_quality [label="Test Quality\nMetrics\n• Assertions/Test\n• Error Handling\n• Async Coverage"];
  test_report [label="Coverage Report\n• Coverage %\n• Untested Files\n• Quality Issues"];
  test_store [label="Store in Memory:\nswarm/tester/\ncoverage", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 5: Documentation
  doc_agent [label="Documentation\nReviewer Agent", fillcolor="#C5CAE9"];
  doc_scan [label="Phase 5:\nDocumentation Review\n• JSDoc Coverage\n• API Docs\n• README", fillcolor="#E8EAF6"];
  doc_analysis [label="Documentation\nAnalysis\n• Inline Comments\n• OpenAPI Spec\n• Setup Guides"];
  doc_report [label="Documentation Report\n• JSDoc %\n• Missing Docs\n• README Gaps"];
  doc_store [label="Store in Memory:\nswarm/code-review-swarm/\ndocumentation", shape=cylinder, fillcolor="#E1F5FE"];

  // Integration and decision
  aggregate [label="Aggregate Results\nfrom All Agents", fillcolor="#FFE0B2"];
  calculate [label="Calculate Scores\n• Security: 30%\n• Performance: 25%\n• Style: 15%\n• Testing: 20%\n• Docs: 10%", fillcolor="#FFF9C4"];

  decision [label="Overall Score ≥ 80\nAND\nZero Blocking Issues?", shape=diamond, fillcolor="#FFECB3", style="filled"];

  approved [label="Merge\nAPPROVED\n✅", fillcolor="#C8E6C9", style="rounded,filled,bold"];
  rejected [label="Changes\nREQUIRED\n⚠️", fillcolor="#FFCDD2", style="rounded,filled,bold"];

  autofix [label="Generate\nAuto-Fix Script\n• Style Fixes\n• Security Patches\n• Test Templates"];

  summary [label="Generate\nComprehensive\nReview Summary", fillcolor="#E1F5FE"];

  notify [label="Notify Developer\n& Post PR Comment", fillcolor="#FFF9C4"];

  end [label="Review\nComplete", shape=ellipse, fillcolor="#C8E6C9"];

  // Main flow
  start -> init;
  init -> coordinate;

  // Parallel agent deployment
  coordinate -> security_agent [label="Agent 1"];
  coordinate -> perf_agent [label="Agent 2"];
  coordinate -> style_agent [label="Agent 3"];
  coordinate -> test_agent [label="Agent 4"];
  coordinate -> doc_agent [label="Agent 5"];

  // Security flow
  security_agent -> security_scan;
  security_scan -> security_auth;
  security_auth -> security_report;
  security_report -> security_store;

  // Performance flow
  perf_agent -> perf_scan;
  perf_scan -> perf_metrics;
  perf_metrics -> perf_report;
  perf_report -> perf_store;

  // Style flow
  style_agent -> style_scan;
  style_scan -> style_naming;
  style_naming -> style_report;
  style_report -> style_store;

  // Test flow
  test_agent -> test_scan;
  test_scan -> test_quality;
  test_quality -> test_report;
  test_report -> test_store;

  // Documentation flow
  doc_agent -> doc_scan;
  doc_scan -> doc_analysis;
  doc_analysis -> doc_report;
  doc_report -> doc_store;

  // Convergence
  security_store -> aggregate;
  perf_store -> aggregate;
  style_store -> aggregate;
  test_store -> aggregate;
  doc_store -> aggregate;

  aggregate -> calculate;
  calculate -> decision;

  // Decision branches
  decision -> approved [label="Yes\n(Score ≥80)", color="#4CAF50", penwidth=2];
  decision -> rejected [label="No\n(Score <80)", color="#F44336", penwidth=2];

  // Rejected path
  rejected -> autofix;
  autofix -> summary;

  // Approved path
  approved -> summary;

  // Final steps
  summary -> notify;
  notify -> end;

  // Visual grouping with subgraphs
  subgraph cluster_phase1 {
    label="Phase 1: Security";
    style=dashed;
    color="#F44336";
    security_scan; security_auth; security_report; security_store;
  }

  subgraph cluster_phase2 {
    label="Phase 2: Performance";
    style=dashed;
    color="#FF9800";
    perf_scan; perf_metrics; perf_report; perf_store;
  }

  subgraph cluster_phase3 {
    label="Phase 3: Style";
    style=dashed;
    color="#9C27B0";
    style_scan; style_naming; style_report; style_store;
  }

  subgraph cluster_phase4 {
    label="Phase 4: Testing";
    style=dashed;
    color="#009688";
    test_scan; test_quality; test_report; test_store;
  }

  subgraph cluster_phase5 {
    label="Phase 5: Documentation";
    style=dashed;
    color="#3F51B5";
    doc_scan; doc_analysis; doc_report; doc_store;
  }

  subgraph cluster_decision {
    label="Merge Readiness";
    style=dashed;
    color="#795548";
    aggregate; calculate; decision;
  }

  // Legend
  subgraph cluster_legend {
    label="Legend";
    style=filled;
    fillcolor="#FAFAFA";
    color="#9E9E9E";

    leg_agent [label="Agent", fillcolor="#FFCDD2"];
    leg_phase [label="Phase", fillcolor="#FFEBEE"];
    leg_action [label="Action", fillcolor="#E3F2FD"];
    leg_memory [label="Memory", shape=cylinder, fillcolor="#E1F5FE"];
    leg_decision [label="Decision", shape=diamond, fillcolor="#FFECB3"];
    leg_result [label="Result", fillcolor="#C8E6C9"];

    leg_agent -> leg_phase -> leg_action -> leg_memory -> leg_decision -> leg_result [style=invis];
  }
}
