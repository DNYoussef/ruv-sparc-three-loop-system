digraph StyleAudit {
  // Graph styling
  graph [rankdir=TB, fontname="Arial", fontsize=12, splines=ortho, nodesep=0.8, ranksep=1.0];
  node [shape=box, style="rounded,filled", fontname="Arial", fontsize=11, fillcolor="#E3F2FD", color="#1976D2", penwidth=2];
  edge [fontname="Arial", fontsize=10, color="#424242", penwidth=1.5];

  // Title
  label=<<B>Code Style Audit with Auto-Fix</B><BR/><FONT POINT-SIZE="10">Comprehensive Style Enforcement with Automated Corrections</FONT>>;
  labelloc=t;
  fontsize=16;

  // Main workflow nodes
  start [label="Style Audit\nInitiated", shape=ellipse, fillcolor="#C8E6C9"];
  init [label="Initialize\nStyle Audit\nWorkflow", fillcolor="#FFF9C4"];

  // Phase 1: Scan Codebase
  phase1_start [label="Phase 1:\nScan Codebase", fillcolor="#FFCDD2", style="rounded,filled,bold"];
  code_analyzer1 [label="Code Analyzer\nAgent", fillcolor="#FFEBEE"];

  eslint_scan [label="ESLint Scan\n• All rules\n• Fix-dry-run"];
  prettier_scan [label="Prettier Check\n• All file types\n• List different"];
  typescript_scan [label="TypeScript\nValidation\n• Strict mode\n• Any types"];
  naming_scan [label="Naming\nConventions\n• Files\n• Classes\n• Functions"];
  organization_scan [label="Code Organization\n• File length\n• Function length\n• Nesting depth"];

  scan_report [label="Scan Report\n• 247 violations\n• 189 auto-fixable\n• 58 manual", fillcolor="#FFE0B2"];
  scan_store [label="Store:\nswarm/code-analyzer/\nscan-results", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 2: Compare to Standards
  phase2_start [label="Phase 2:\nCompare to\nStandards", fillcolor="#F8BBD0", style="rounded,filled,bold"];
  reviewer1 [label="Reviewer Agent", fillcolor="#FCE4EC"];

  load_standards [label="Load Standards\n• ESLint config\n• Prettier config\n• TypeScript config\n• Custom conventions"];
  compare_eslint [label="Compare ESLint\n• Missing rules: 7\n• Conflicts: 3\n• Disabled: 5"];
  compare_prettier [label="Compare Prettier\n• Config diffs\n• Recommendations"];
  compare_typescript [label="Compare TypeScript\n• Strict mode\n• Individual checks"];

  standards_report [label="Standards Report\n• ESLint: 72.1%\n• Prettier: 88.9%\n• TypeScript: 42.9%", fillcolor="#FFE0B2"];
  standards_store [label="Store:\nswarm/reviewer/\nstandards-comparison", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 3: Report Violations
  phase3_start [label="Phase 3:\nReport\nViolations", fillcolor="#D1C4E9", style="rounded,filled,bold"];
  code_analyzer2 [label="Code Analyzer\nAgent", fillcolor="#EDE7F6"];

  prioritize [label="Prioritize\nViolations\n• P0: 0\n• P1: 34\n• P2: 73\n• P3: 140"];
  categorize [label="Categorize\nby File\n• Top 10 worst\n• By module"];
  fix_recommendations [label="Fix\nRecommendations\n• Auto-fixable: 76.5%\n• Manual: 23.5%"];

  violations_report [label="Violations Report\n(Multi-Format)\n• JSON\n• Markdown\n• HTML\n• CSV", fillcolor="#FFE0B2"];
  violations_store [label="Store:\nswarm/code-analyzer/\nviolations-report", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 4: Auto-Fix Issues
  phase4_start [label="Phase 4:\nAuto-Fix\nIssues", fillcolor="#B2DFDB", style="rounded,filled,bold"];
  code_analyzer3 [label="Code Analyzer\nAgent", fillcolor="#E0F2F1"];

  backup [label="Create Backup\n• Git stash\n• Timestamped"];
  eslint_fix [label="ESLint --fix\n• 189 issues fixed\n• Auto-fixable only"];
  prettier_fix [label="Prettier --write\n• 147 files formatted\n• All formatting"];
  typescript_fix [label="TypeScript Fixes\n• Limited auto-fix\n• Manual mostly"];
  naming_fix [label="Safe Naming Fixes\n• File renames\n• Reference updates"];
  verify [label="Verify Fixes\n• Run tests\n• Check build"];

  fix_report [label="Auto-Fix Report\n• Fixed: 189\n• Remaining: 58\n• Tests: Pass ✅", fillcolor="#FFE0B2"];
  fix_store [label="Store:\nswarm/code-analyzer/\nauto-fix-results", shape=cylinder, fillcolor="#E1F5FE"];

  // Phase 5: Validate Compliance
  phase5_start [label="Phase 5:\nValidate\nCompliance", fillcolor="#C5CAE9", style="rounded,filled,bold"];
  reviewer2 [label="Reviewer Agent", fillcolor="#E8EAF6"];

  run_linting [label="Run All Linters\n• ESLint\n• Prettier\n• TypeScript"];
  calculate_metrics [label="Calculate\nCompliance\n• By category\n• Overall weighted"];
  run_tests [label="Run Test Suite\n• Unit\n• Integration\n• E2E"];
  validate_build [label="Validate Build\n• Build success\n• Size check"];

  compliance_report [label="Compliance Report\n• Overall: 91.2%\n• Tests: Pass ✅\n• Build: Success ✅", fillcolor="#FFE0B2"];
  compliance_store [label="Store:\nswarm/reviewer/\ncompliance-validation", shape=cylinder, fillcolor="#E1F5FE"];

  // Decision
  decision [label="Compliance\n≥ 90%\nAND\nTests Pass?", shape=diamond, fillcolor="#FFECB3", style="filled"];

  approved [label="AUDIT\nPASSED\n✅", fillcolor="#C8E6C9", style="rounded,filled,bold"];
  rejected [label="ADDITIONAL\nFIXES NEEDED\n⚠️", fillcolor="#FFCDD2", style="rounded,filled,bold"];

  commit [label="Commit\nAuto-Fixes\n+ Report", fillcolor="#FFF9C4"];

  notify [label="Notify Team\n& Update\nDashboard", fillcolor="#E1F5FE"];

  end [label="Style Audit\nComplete", shape=ellipse, fillcolor="#C8E6C9"];

  // Main flow
  start -> init;
  init -> phase1_start;

  // Phase 1 flow
  phase1_start -> code_analyzer1;
  code_analyzer1 -> eslint_scan;
  code_analyzer1 -> prettier_scan;
  code_analyzer1 -> typescript_scan;
  code_analyzer1 -> naming_scan;
  code_analyzer1 -> organization_scan;

  eslint_scan -> scan_report;
  prettier_scan -> scan_report;
  typescript_scan -> scan_report;
  naming_scan -> scan_report;
  organization_scan -> scan_report;

  scan_report -> scan_store;
  scan_store -> phase2_start;

  // Phase 2 flow
  phase2_start -> reviewer1;
  reviewer1 -> load_standards;
  load_standards -> compare_eslint;
  load_standards -> compare_prettier;
  load_standards -> compare_typescript;

  compare_eslint -> standards_report;
  compare_prettier -> standards_report;
  compare_typescript -> standards_report;

  standards_report -> standards_store;
  standards_store -> phase3_start;

  // Phase 3 flow
  phase3_start -> code_analyzer2;
  code_analyzer2 -> prioritize;
  code_analyzer2 -> categorize;
  code_analyzer2 -> fix_recommendations;

  prioritize -> violations_report;
  categorize -> violations_report;
  fix_recommendations -> violations_report;

  violations_report -> violations_store;
  violations_store -> phase4_start;

  // Phase 4 flow
  phase4_start -> code_analyzer3;
  code_analyzer3 -> backup;
  backup -> eslint_fix;
  backup -> prettier_fix;
  backup -> typescript_fix;
  backup -> naming_fix;

  eslint_fix -> verify;
  prettier_fix -> verify;
  typescript_fix -> verify;
  naming_fix -> verify;

  verify -> fix_report;
  fix_report -> fix_store;
  fix_store -> phase5_start;

  // Phase 5 flow
  phase5_start -> reviewer2;
  reviewer2 -> run_linting;
  reviewer2 -> calculate_metrics;
  reviewer2 -> run_tests;
  reviewer2 -> validate_build;

  run_linting -> compliance_report;
  calculate_metrics -> compliance_report;
  run_tests -> compliance_report;
  validate_build -> compliance_report;

  compliance_report -> compliance_store;
  compliance_store -> decision;

  // Decision branches
  decision -> approved [label="Yes\n(≥90%)", color="#4CAF50", penwidth=2];
  decision -> rejected [label="No\n(<90%)", color="#F44336", penwidth=2];

  // Approved path
  approved -> commit;
  commit -> notify;

  // Rejected path
  rejected -> notify [label="Manual\nfixes\nrequired"];

  // Final step
  notify -> end;

  // Visual grouping with subgraphs
  subgraph cluster_phase1 {
    label="Phase 1: Scan Codebase (8 min)";
    style=dashed;
    color="#F44336";
    eslint_scan; prettier_scan; typescript_scan; naming_scan; organization_scan; scan_report; scan_store;
  }

  subgraph cluster_phase2 {
    label="Phase 2: Compare to Standards (5 min)";
    style=dashed;
    color="#E91E63";
    load_standards; compare_eslint; compare_prettier; compare_typescript; standards_report; standards_store;
  }

  subgraph cluster_phase3 {
    label="Phase 3: Report Violations (5 min)";
    style=dashed;
    color="#9C27B0";
    prioritize; categorize; fix_recommendations; violations_report; violations_store;
  }

  subgraph cluster_phase4 {
    label="Phase 4: Auto-Fix Issues (5 min)";
    style=dashed;
    color="#009688";
    backup; eslint_fix; prettier_fix; typescript_fix; naming_fix; verify; fix_report; fix_store;
  }

  subgraph cluster_phase5 {
    label="Phase 5: Validate Compliance (2 min)";
    style=dashed;
    color="#3F51B5";
    run_linting; calculate_metrics; run_tests; validate_build; compliance_report; compliance_store;
  }

  // Legend
  subgraph cluster_legend {
    label="Legend";
    style=filled;
    fillcolor="#FAFAFA";
    color="#9E9E9E";

    leg_phase [label="Phase Start", fillcolor="#FFCDD2", style="rounded,filled,bold"];
    leg_agent [label="Agent", fillcolor="#FFEBEE"];
    leg_action [label="Action", fillcolor="#E3F2FD"];
    leg_report [label="Report", fillcolor="#FFE0B2"];
    leg_memory [label="Memory", shape=cylinder, fillcolor="#E1F5FE"];
    leg_decision [label="Decision", shape=diamond, fillcolor="#FFECB3"];

    leg_phase -> leg_agent -> leg_action -> leg_report -> leg_memory -> leg_decision [style=invis];
  }
}
