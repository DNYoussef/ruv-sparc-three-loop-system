digraph FlowNexusPlatform {
    rankdir=TB;
    node [shape=box, style="rounded,filled", fillcolor=lightblue, fontname="Arial"];
    edge [fontname="Arial", fontsize=10];

    start [label="Start\nPlatform Setup", shape=ellipse, fillcolor=lightgreen];
    end [label="Platform\nOperational", shape=ellipse, fillcolor=lightgreen];

    // Phase 1: Authentication
    subgraph cluster_phase1 {
        label="Phase 1: Authentication Setup (5-10 min)";
        style=filled;
        fillcolor=lightyellow;

        check_mcp [label="Check MCP\nAvailability"];
        register [label="Register User\n(if needed)"];
        login [label="Login &\nGet Token"];
        verify_auth [label="Verify\nAuthentication"];
        get_profile [label="Get User\nProfile"];
        create_config [label="Create\nConfiguration"];

        check_mcp -> register;
        register -> login;
        login -> verify_auth;
        verify_auth -> get_profile;
        get_profile -> create_config;
    }

    // Phase 2: Configure Services
    subgraph cluster_phase2 {
        label="Phase 2: Configure Services (10-15 min)";
        style=filled;
        fillcolor=lightcyan;

        create_sandbox [label="Create Dev\nSandbox"];
        config_sandbox [label="Configure\nSandbox"];
        init_storage [label="Initialize\nStorage"];
        setup_realtime [label="Setup Real-time\nSubscriptions"];
        apply_schema [label="Apply Database\nSchema"];
        create_init [label="Create Init\nScripts"];

        create_sandbox -> config_sandbox;
        config_sandbox -> init_storage;
        init_storage -> setup_realtime;
        setup_realtime -> apply_schema;
        apply_schema -> create_init;
    }

    // Phase 3: Deploy Applications
    subgraph cluster_phase3 {
        label="Phase 3: Deploy Applications (10-15 min)";
        style=filled;
        fillcolor=lightpink;

        list_templates [label="List Available\nTemplates"];
        choose_method [label="Template or\nCustom?", shape=diamond, fillcolor=lightyellow];
        deploy_template [label="Deploy from\nTemplate"];
        deploy_custom [label="Deploy Custom\nApplication"];
        monitor_deploy [label="Monitor\nDeployment"];
        verify_health [label="Verify Health\nChecks"];

        list_templates -> choose_method;
        choose_method -> deploy_template [label="Template"];
        choose_method -> deploy_custom [label="Custom"];
        deploy_template -> monitor_deploy;
        deploy_custom -> monitor_deploy;
        monitor_deploy -> verify_health;
    }

    // Phase 4: Manage Operations
    subgraph cluster_phase4 {
        label="Phase 4: Manage Operations (5-10 min)";
        style=filled;
        fillcolor=lightgoldenrod;

        check_health [label="Check System\nHealth"];
        check_sandbox [label="Check Sandbox\nStatus"];
        get_logs [label="Get Application\nLogs"];
        list_files [label="List Execution\nFiles"];
        get_audit [label="Get Audit\nLogs"];
        setup_monitor [label="Setup\nMonitoring"];
        create_ops [label="Create Ops\nUtilities"];

        check_health -> check_sandbox;
        check_sandbox -> get_logs;
        get_logs -> list_files;
        list_files -> get_audit;
        get_audit -> setup_monitor;
        setup_monitor -> create_ops;
    }

    // Phase 5: Handle Payments
    subgraph cluster_phase5 {
        label="Phase 5: Handle Payments (5-10 min)";
        style=filled;
        fillcolor=lightsteelblue;

        check_balance [label="Check Credit\nBalance"];
        get_history [label="Get Payment\nHistory"];
        config_refill [label="Configure\nAuto-Refill"];
        get_stats [label="Get User\nStatistics"];
        create_billing [label="Create Billing\nUtilities"];

        check_balance -> get_history;
        get_history -> config_refill;
        config_refill -> get_stats;
        get_stats -> create_billing;
    }

    // Main workflow
    start -> check_mcp;
    create_config -> create_sandbox;
    create_init -> list_templates;
    verify_health -> check_health;
    create_ops -> check_balance;
    create_billing -> end;

    // Agents
    subgraph cluster_agents {
        label="Agents";
        style=filled;
        fillcolor=white;

        cicd [label="cicd-engineer\n(Infrastructure)", shape=box, fillcolor=lightcoral];
        backend [label="backend-dev\n(Integration)", shape=box, fillcolor=lightseagreen];
        architect [label="system-architect\n(Design)", shape=box, fillcolor=lightskyblue];
    }

    cicd -> create_sandbox [style=invis];
    backend -> create_init [style=invis];
    architect -> create_config [style=invis];

    // Memory checkpoints
    mem1 [label="Memory:\nuser-id\nuser-profile\nconfig", shape=note, fillcolor=wheat];
    mem2 [label="Memory:\nsandbox-id\nsubscription-id", shape=note, fillcolor=wheat];
    mem3 [label="Memory:\ndeployment-id", shape=note, fillcolor=wheat];
    mem4 [label="Memory:\nmonitoring", shape=note, fillcolor=wheat];
    mem5 [label="Memory:\nbalance\nworkflow-complete", shape=note, fillcolor=wheat];

    create_config -> mem1 [style=dotted, color=gray];
    create_init -> mem2 [style=dotted, color=gray];
    verify_health -> mem3 [style=dotted, color=gray];
    create_ops -> mem4 [style=dotted, color=gray];
    create_billing -> mem5 [style=dotted, color=gray];

    // Success criteria
    criteria [label="Success Criteria:\n✓ Authenticated\n✓ Services running\n✓ App deployed\n✓ Monitoring active\n✓ Billing configured",
              shape=box, fillcolor=palegreen];

    end -> criteria [style=dotted];
}
