digraph FunctionalityAudit {
    rankdir=TB;
    node [shape=box, style="rounded,filled", fillcolor=lightblue, fontname="Arial"];
    edge [fontname="Arial"];

    start [label="Start: Code to Validate", fillcolor=lightgreen];

    // Importance of Testing
    importance [label="Why Execution\nVerification?", fillcolor=lightyellow, shape=folder];
    i1 [label="Syntax ≠ Semantic\nCorrectness"];
    i2 [label="Static Analysis\nLimitations"];
    i3 [label="The Testing Gap"];
    i4 [label="Integration Complexity"];

    // Sandbox Testing Methodology
    sandbox [label="Sandbox Testing\nMethodology", fillcolor=lightcyan];
    sb1 [label="1. Sandbox Creation\n• Isolated environment\n• Replicate production"];
    sb2 [label="2. Test Case Generation\n• Normal operation\n• Boundary conditions\n• Error cases\n• Edge cases\n• Stress tests"];
    sb3 [label="3. Execution Monitoring\n• stdout/stderr\n• Return values\n• Resource usage\n• Side effects"];
    sb4 [label="4. Output Verification\n• Expected vs actual\n• Precise equality\n• Range checking\n• Structural validation"];
    sb5 [label="5. Failure Analysis\n• Error messages\n• Execution trace\n• Root cause"];

    // Systematic Debugging
    debug [label="Systematic Debugging\nWorkflow", fillcolor=lightyellow];
    d1 [label="Step 1: Reproduce Bug\nReliably"];
    d2 [label="Step 2: Understand\nBug's Cause\n• Trace execution\n• Inspect state"];
    d3 [label="Step 3: Design the Fix\n• Address root cause\n• Consider side effects"];
    d4 [label="Step 4: Implement Using\nBest Practices\n• Clear code\n• Error handling\n• Validation"];
    d5 [label="Step 5: Verify the Fix\n• Regression testing\n• Edge cases"];
    d6 [label="Step 6: Document\nthe Fix"];

    // Debugging Techniques
    techniques [label="Debugging Techniques", fillcolor=lightsalmon];
    t1 [label="Binary Search\nDebugging"];
    t2 [label="Rubber Duck\nDebugging"];
    t3 [label="Hypothesis-Driven\nDebugging"];
    t4 [label="Differential\nDebugging"];
    t5 [label="Logging &\nInstrumentation"];

    // Report Structure
    report [label="Output Report", fillcolor=lightgreen];
    r1 [label="Execution Summary\n• Pass/fail rate\n• Overall assessment"];
    r2 [label="Detailed Test Results\n• Each test case\n• Expected vs actual"];
    r3 [label="Identified Bugs\n• Behavior\n• Root cause\n• Severity\n• Recommended fix"];
    r4 [label="Remediation Tracking\n• Progress updates"];
    r5 [label="Testing Recommendations"];

    // Decision Point
    decision [label="Tests Pass?", shape=diamond, fillcolor=yellow];
    pass [label="All Tests Pass", fillcolor=lightgreen];
    fail [label="Failures Detected", fillcolor=lightcoral];

    output [label="Output: Verified\nFunctional Code", fillcolor=lightgreen];

    // External integrations
    theater [label="theater-detection-audit\n(May reveal theater)", shape=cylinder, fillcolor=lightcoral];
    style [label="style-audit\n(Next: style checks)", shape=cylinder, fillcolor=lightcoral];

    // Flow
    start -> importance;
    importance -> i1 -> i2 -> i3 -> i4;
    i4 -> sandbox;

    sandbox -> sb1 -> sb2 -> sb3 -> sb4 -> sb5;
    sb5 -> decision;

    decision -> pass [label="yes"];
    decision -> fail [label="no"];

    pass -> report;
    fail -> debug;

    debug -> d1 -> d2 -> d3 -> d4 -> d5 -> d6;
    d6 -> techniques;

    techniques -> t1;
    techniques -> t2;
    techniques -> t3;
    techniques -> t4;
    techniques -> t5;

    t1 -> sandbox [label="retry", color=red];
    t2 -> sandbox [label="retry", color=red];
    t3 -> sandbox [label="retry", color=red];
    t4 -> sandbox [label="retry", color=red];
    t5 -> sandbox [label="retry", color=red];

    report -> r1 -> r2 -> r3 -> r4 -> r5;
    r5 -> output;

    // Cross-references
    sb5 -> theater [style=dashed, label="may find", color=blue];
    output -> style [style=dashed, label="feeds to", color=green];

    // Labels
    labelloc="t";
    label="Functionality Audit: Sandbox Testing & Systematic Debugging";
    fontsize=16;
    fontname="Arial Bold";
}
