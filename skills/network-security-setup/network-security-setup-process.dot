digraph NetworkSecuritySetup {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start
    start [shape=ellipse, label="Start:\nNetwork Security\nRequired", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nSecure Network\nPolicy Active", fillcolor=green, fontcolor=white];

    // Environment Analysis
    subgraph cluster_analysis {
        label="Environment Analysis";
        fillcolor=lightyellow;
        style=filled;

        analyze_type [label="Analyze\nEnvironment Type"];
        identify_registries [label="Identify Required\nRegistries"];
        identify_internal [label="Identify Internal\nDomains"];
        check_proxy [label="Check Proxy\nRequirements"];

        analyze_type -> identify_registries -> identify_internal -> check_proxy;
    }

    // Mode Decision
    mode_decision [shape=diamond, label="Network\nMode?", fillcolor=yellow];

    // Trusted Mode Path
    subgraph cluster_trusted {
        label="Trusted Network Access";
        fillcolor=lightblue;
        style=filled;

        trusted_base [label="Add Standard\nRegistries"];
        trusted_github [label="Add GitHub\nAccess"];
        trusted_cdn [label="Add CDN\nAccess"];

        trusted_base -> trusted_github -> trusted_cdn;
    }

    // No Network Path
    no_network [shape=box, label="Configure:\nNo Network Access", fillcolor=lightcoral];

    // Custom Mode Path
    subgraph cluster_custom {
        label="Custom Network Access";
        fillcolor=lightgreen;
        style=filled;

        custom_internal [label="Add Internal\nDomains"];
        custom_public [label="Add Selected\nPublic Domains"];
        custom_proxy [label="Configure\nProxy Settings"];

        custom_internal -> custom_public -> custom_proxy;
    }

    // Environment Variables
    subgraph cluster_envvars {
        label="Environment Variable Handling";
        fillcolor=lightsalmon;
        style=filled;

        identify_vars [label="Identify Required\nEnv Vars"];
        classify_vars [label="Classify:\nSafe vs Secret"];
        doc_secrets [label="Document Secrets\n(.env.local)"];
        add_safe [label="Add Safe Vars\nto Config"];

        identify_vars -> classify_vars -> doc_secrets -> add_safe;
    }

    // Secret Warning
    secret_warning [shape=octagon, label="STOP:\nNEVER Put Secrets\nin Sandbox Config", fillcolor=red, fontcolor=white];

    // Threat Validation
    subgraph cluster_threats {
        label="Threat Mitigation Validation";
        fillcolor=lightcyan;
        style=filled;

        check_injection [label="Verify Blocks:\nPrompt Injection"];
        check_malware [label="Verify Blocks:\nMalware Downloads"];
        check_exfil [label="Verify Blocks:\nData Exfiltration"];
        check_scanning [label="Verify Blocks:\nNetwork Scanning"];

        check_injection -> check_malware -> check_exfil -> check_scanning;
    }

    // Testing
    subgraph cluster_testing {
        label="Configuration Testing";
        fillcolor=lightgreen;
        style=filled;

        test_package [label="Test Package\nInstallation"];
        test_git [label="Test Git\nOperations"];
        test_build [label="Test Build\nCommands"];
        test_blocked [label="Test Untrusted\nDomains Blocked"];

        test_package -> test_git -> test_build -> test_blocked;
    }

    // Quality Check
    quality_check [shape=diamond, label="All Tests\nPass?", fillcolor=yellow];

    // Apply Configuration
    apply_config [label="Apply Network\nConfiguration", fillcolor=lightblue];

    // Documentation
    document [label="Document:\n- Trusted domains\n- Security rationale\n- Env var requirements", fillcolor=lightblue];

    // Flow
    start -> analyze_type;
    check_proxy -> mode_decision;

    mode_decision -> trusted_base [label="trusted"];
    mode_decision -> no_network [label="none"];
    mode_decision -> custom_internal [label="custom"];

    trusted_cdn -> identify_vars [lhead=cluster_envvars];
    no_network -> identify_vars [lhead=cluster_envvars];
    custom_proxy -> identify_vars [lhead=cluster_envvars];

    classify_vars -> secret_warning [style=dashed, label="if secrets found"];
    secret_warning -> doc_secrets [label="document in\n.env.local"];

    add_safe -> check_injection [lhead=cluster_threats];
    check_scanning -> test_package [lhead=cluster_testing];

    test_blocked -> quality_check;
    quality_check -> apply_config [label="yes", color=green];
    quality_check -> identify_registries [label="no\nreanalyze", color=red, style=dashed];

    apply_config -> document;
    document -> end;

    // External References
    threat_model [shape=cylinder, label="Threat Model:\n1. Prompt Injection\n2. Malware Download\n3. Data Exfiltration\n4. Network Scanning", fillcolor=lightcoral];
    check_injection -> threat_model [style=dashed, label="validates against"];

    trusted_domains [shape=folder, label="Default Trusted:\n- *.npmjs.org\n- *.github.com\n- *.docker.io\n- *.pypi.org\n- CDNs", fillcolor=lightyellow];
    trusted_base -> trusted_domains [style=dashed, label="uses"];

    labelloc="t";
    label="Network Security Setup: Zero-Trust Network Isolation";
    fontsize=16;
    fontname="Arial Bold";
}
