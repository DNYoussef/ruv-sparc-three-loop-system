digraph ProjectManagementProcess {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start and end
    start [shape=ellipse, label="Start:\nProject Management\nOperation", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nProject Automated", fillcolor=green, fontcolor=white];

    // Issue triage workflow
    subgraph cluster_triage {
        label="Workflow 1: Automated Issue Triage";
        fillcolor=lightyellow;
        style=filled;

        init_star [label="Initialize Star\nSwarm"];
        monitor_issues [label="Monitor New\nIssues (Real-time)"];
        classify [label="Issue Tracker:\nClassify & Label"];
        assign_team [label="Coordinator:\nAssign Team Member"];
        set_priority [label="Planner:\nDetermine Priority"];
        update_board [label="Board Sync:\nAdd to Project Board"];

        init_star -> monitor_issues;
        monitor_issues -> classify;
        classify -> assign_team;
        assign_team -> set_priority;
        set_priority -> update_board;
    }

    // Sprint planning workflow
    subgraph cluster_sprint {
        label="Workflow 2: Sprint Planning";
        fillcolor=lightblue;
        style=filled;

        calc_capacity [label="Calculate Team\nCapacity"];
        review_backlog [label="Planner:\nReview & Prioritize Backlog"];
        create_milestone [label="Create Sprint\nMilestone"];
        compose_sprint [label="Coordinator:\nCompose Sprint Backlog"];
        init_board [label="Board Sync:\nInitialize Sprint Board"];
        daily_updates [label="Daily Status\nUpdates"];

        calc_capacity -> review_backlog;
        review_backlog -> create_milestone;
        create_milestone -> compose_sprint;
        compose_sprint -> init_board;
        init_board -> daily_updates;
    }

    // Milestone tracking workflow
    subgraph cluster_milestone {
        label="Workflow 3: Milestone Tracking";
        fillcolor=lightcoral;
        style=filled;

        define_milestone [label="Define Release\nMilestone"];
        breakdown_release [label="Planner:\nBreak Down Features"];
        track_progress [label="Track Progress\n& Generate Reports"];
        identify_risks [label="Coordinator:\nIdentify Risks"];
        stakeholder_update [label="Generate\nStakeholder Update"];

        define_milestone -> breakdown_release;
        breakdown_release -> track_progress;
        track_progress -> identify_risks;
        identify_risks -> stakeholder_update;
    }

    // Advanced features
    subgraph cluster_advanced {
        label="Advanced Features";
        fillcolor=lightsalmon;
        style=filled;

        custom_fields [label="Configure Custom\nFields (Projects v2)"];
        external_sync [label="Sync with\nExternal Tools"];
        analytics [label="Generate Project\nAnalytics"];

        custom_fields -> external_sync [style=dashed];
        external_sync -> analytics [style=dashed];
    }

    // Decision points
    issue_type [shape=diamond, label="Issue\nType?", fillcolor=yellow];
    sprint_ready [shape=diamond, label="Sprint\nReady?", fillcolor=yellow];
    milestone_complete [shape=diamond, label="Milestone\nComplete?", fillcolor=yellow];

    // External tools
    mcp_star [shape=cylinder, label="MCP Swarm:\nStar Topology\nCentralized Control", fillcolor=lightcoral];
    github_api [shape=cylinder, label="github-api.sh:\nIssues, Milestones\nProjects v2", fillcolor=lightcoral];
    project_api [shape=cylinder, label="project-api.sh:\nProjects v2 API\nCustom Fields", fillcolor=lightcoral];

    // Main flow - Issue triage
    start -> init_star;
    monitor_issues -> issue_type;

    issue_type -> classify [label="bug/feature"];
    issue_type -> assign_team [label="question", style=dashed];

    update_board -> calc_capacity [lhead=cluster_sprint, style=dashed, label="plan sprint"];

    // Sprint planning flow
    daily_updates -> sprint_ready;
    sprint_ready -> define_milestone [lhead=cluster_milestone, label="sprint complete"];
    sprint_ready -> daily_updates [label="in progress", style=dashed];

    // Milestone tracking flow
    stakeholder_update -> milestone_complete;
    milestone_complete -> end [label="yes"];
    milestone_complete -> track_progress [label="no:\nkeep tracking", style=dashed];

    // Advanced features integration
    update_board -> custom_fields [lhead=cluster_advanced, style=dashed, label="configure"];
    analytics -> end [style=dashed];

    // External tool usage
    init_star -> mcp_star [style=dashed, label="uses", dir=both];
    monitor_issues -> github_api [style=dashed, label="uses"];
    classify -> github_api [style=dashed, label="uses"];
    update_board -> project_api [style=dashed, label="uses"];
    custom_fields -> project_api [style=dashed, label="uses"];

    // Critical paths
    duplicate_check [shape=octagon, label="Check for\nDuplicates", fillcolor=yellow];
    capacity_exceeded [shape=octagon, label="WARNING:\nSprint Capacity\nExceeded", fillcolor=orange];

    classify -> duplicate_check [style=dashed];
    duplicate_check -> assign_team [label="unique"];
    duplicate_check -> monitor_issues [label="duplicate:\nclose", color=orange];

    compose_sprint -> capacity_exceeded [style=dashed, label="validation"];
    capacity_exceeded -> review_backlog [label="rebalance", color=red];
    capacity_exceeded -> init_board [label="approved override"];

    // Best practices
    retrospective [shape=folder, label="Sprint\nRetrospective", fillcolor=lightyellow];
    process_improve [shape=folder, label="Process\nImprovement", fillcolor=lightyellow];

    sprint_ready -> retrospective [style=dashed, label="conduct"];
    retrospective -> process_improve [style=dashed];
    process_improve -> calc_capacity [style=dashed, label="apply learnings"];

    labelloc="t";
    label="GitHub Project Management Process: Automated Issue Triage, Sprint Planning, and Milestone Tracking";
    fontsize=16;
    fontname="Arial Bold";
}
