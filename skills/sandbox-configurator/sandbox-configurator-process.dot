digraph SandboxConfigurator {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start and end
    start [shape=ellipse, label="Start:\nUser Needs\nSandbox Setup", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nSecure Sandbox\nConfigured", fillcolor=green, fontcolor=white];

    // Analysis Phase
    subgraph cluster_analysis {
        label="Security Analysis Phase";
        fillcolor=lightyellow;
        style=filled;

        analyze_env [label="Analyze\nEnvironment\nType"];
        assess_needs [label="Assess Security\nRequirements"];
        identify_access [label="Identify Required\nExternal Access"];

        analyze_env -> assess_needs;
        assess_needs -> identify_access;
    }

    // Security Level Decision
    security_decision [shape=diamond, label="Security\nLevel?", fillcolor=yellow];

    // Security Paths
    subgraph cluster_maximum {
        label="Maximum Security";
        fillcolor=lightcoral;
        style=filled;

        max_config [label="Enable Sandbox\nRegular Permissions"];
        max_network [label="Trusted Domains\nOnly"];
        max_exclusions [label="Minimal\nExclusions"];

        max_config -> max_network -> max_exclusions;
    }

    subgraph cluster_balanced {
        label="Balanced Security";
        fillcolor=lightblue;
        style=filled;

        bal_config [label="Enable Sandbox\nAuto-Allow Trusted"];
        bal_network [label="Custom Network\nAccess"];
        bal_docker [label="Add Docker/Git\nExclusions"];
        bal_local [label="Allow Local\nBinding"];

        bal_config -> bal_network -> bal_docker -> bal_local;
    }

    subgraph cluster_development {
        label="Development Mode";
        fillcolor=lightsalmon;
        style=filled;

        dev_config [label="Enable Sandbox\nAuto-Allow"];
        dev_full [label="Full Docker\nIntegration"];
        dev_unix [label="Unix Sockets\nEnabled"];

        dev_config -> dev_full -> dev_unix;
    }

    // Warning for no sandbox
    no_sandbox_warning [shape=octagon, label="WARNING:\nNo Sandbox\nHigh Risk", fillcolor=red, fontcolor=white];

    // Validation
    validate [label="Validate\nConfiguration"];

    // Test operations
    subgraph cluster_testing {
        label="Validation Tests";
        fillcolor=lightgreen;
        style=filled;

        test_npm [label="Test Package\nInstallation"];
        test_git [label="Test Git\nOperations"];
        test_docker [label="Test Docker\n(if enabled)"];
        test_dev [label="Test Dev Server\n(if enabled)"];

        test_npm -> test_git -> test_docker -> test_dev;
    }

    // Quality check
    quality_check [shape=diamond, label="All Tests\nPass?", fillcolor=yellow];

    // Apply configuration
    apply [label="Apply Settings to\n.claude/settings.local.json", fillcolor=lightblue];

    // Document
    document [label="Document Security\nChoices & Trade-offs", fillcolor=lightblue];

    // Flow
    start -> analyze_env;
    identify_access -> security_decision;

    security_decision -> max_config [label="maximum"];
    security_decision -> bal_config [label="balanced"];
    security_decision -> dev_config [label="development"];
    security_decision -> no_sandbox_warning [label="none\n(not recommended)", color=red];

    max_exclusions -> validate;
    bal_local -> validate;
    dev_unix -> validate;
    no_sandbox_warning -> apply [label="user accepts risk", style=dashed, color=red];

    validate -> test_npm [lhead=cluster_testing];
    test_dev -> quality_check;

    quality_check -> apply [label="yes", color=green];
    quality_check -> assess_needs [label="no\nreanalyze", color=red, style=dashed];

    apply -> document;
    document -> end;

    // External reference
    threat_model [shape=cylinder, label="Threat Model:\n- Prompt Injection\n- Malware Download\n- Data Exfiltration", fillcolor=lightcoral];
    assess_needs -> threat_model [style=dashed, label="considers"];

    labelloc="t";
    label="Sandbox Configurator: Secure Execution Boundary Setup";
    fontsize=16;
    fontname="Arial Bold";
}
