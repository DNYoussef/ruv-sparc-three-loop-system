digraph SkillForgeSOP {
    // Global settings
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start and end nodes
    start [
        shape=ellipse,
        label="Start:\nSkill Creation Request",
        fillcolor=lightgreen
    ];

    end [
        shape=ellipse,
        label="Complete:\nProduction-Ready Skill",
        fillcolor=green,
        fontcolor=white
    ];

    // Phase 1: Intent Archaeology
    subgraph cluster_phase1 {
        label="Phase 1: Intent Archaeology\nAgent: researcher";
        fillcolor=lightyellow;
        style=filled;

        p1_analyze [label="Conduct Deep\nAnalysis", fillcolor=lightblue];
        p1_assumptions [label="Surface Hidden\nAssumptions", fillcolor=lightblue];
        p1_map [label="Map Problem\nSpace", fillcolor=lightblue];
        p1_questions [label="Generate Strategic\nQuestions", fillcolor=lightblue];
        p1_document [label="Document Core\nUnderstanding", fillcolor=lightblue];

        p1_analyze -> p1_assumptions -> p1_map -> p1_questions -> p1_document;
    }

    // Phase 2: Use Case Crystallization
    subgraph cluster_phase2 {
        label="Phase 2: Use Case Crystallization\nAgent: analyst";
        fillcolor=lightyellow;
        style=filled;

        p2_examples [label="Generate\nRepresentative Examples", fillcolor=lightblue];
        p2_validate [label="Validate Against\nRequirements", fillcolor=lightblue];
        p2_patterns [label="Identify Pattern\nVariations", fillcolor=lightblue];
        p2_coverage [label="Establish Coverage\nMatrix", fillcolor=lightblue];
        p2_schemas [label="Extract Input/Output\nSchemas", fillcolor=lightblue];

        p2_examples -> p2_validate -> p2_patterns -> p2_coverage -> p2_schemas;
    }

    // Phase 3: Structural Architecture
    subgraph cluster_phase3 {
        label="Phase 3: Structural Architecture\nAgent: architect";
        fillcolor=lightyellow;
        style=filled;

        p3_disclosure [label="Apply Progressive\nDisclosure Design", fillcolor=lightblue];
        p3_resources [label="Design Resource\nRequirements", fillcolor=lightblue];
        p3_structure [label="Structure SKILL.md\nContent", fillcolor=lightblue];
        p3_patterns [label="Apply Prompting\nPatterns", fillcolor=lightblue];
        p3_metadata [label="Engineer\nMetadata", fillcolor=lightblue];

        p3_disclosure -> p3_resources -> p3_structure -> p3_patterns -> p3_metadata;
    }

    // Phase 4: Content Implementation
    subgraph cluster_phase4 {
        label="Phase 4: Content Implementation\nAgent: coder";
        fillcolor=lightyellow;
        style=filled;

        p4_frontmatter [label="Write YAML\nFrontmatter", fillcolor=lightblue];
        p4_imperative [label="Implement\nImperative Voice", fillcolor=lightblue];
        p4_workflows [label="Structure\nWorkflows", fillcolor=lightblue];
        p4_quality [label="Build Quality\nMechanisms", fillcolor=lightblue];
        p4_examples [label="Include Concrete\nExamples", fillcolor=lightblue];

        p4_frontmatter -> p4_imperative -> p4_workflows -> p4_quality -> p4_examples;
    }

    // Phase 5: Resource Development
    subgraph cluster_phase5 {
        label="Phase 5: Resource Development\nAgent: coder";
        fillcolor=lightyellow;
        style=filled;

        p5_scripts [label="Develop Executable\nScripts", fillcolor=lightblue];
        p5_references [label="Compile Reference\nDocumentation", fillcolor=lightblue];
        p5_assets [label="Curate Asset\nFiles", fillcolor=lightblue];
        p5_diagram [label="Create GraphViz\nProcess Diagram", fillcolor=lightblue];
        p5_document [label="Document Resource\nUsage", fillcolor=lightblue];

        p5_scripts -> p5_references -> p5_assets -> p5_diagram -> p5_document;
    }

    // Phase 6: Validation Testing
    subgraph cluster_phase6 {
        label="Phase 6: Validation Testing\nAgent: tester";
        fillcolor=lightyellow;
        style=filled;

        p6_structural [label="Structural\nValidation", fillcolor=lightblue];
        p6_functional [label="Functional\nTesting", fillcolor=lightblue];
        p6_clarity [label="Clarity\nAssessment", fillcolor=lightblue];
        p6_antipatterns [label="Anti-Pattern\nDetection", fillcolor=lightblue];
        p6_report [label="Generate Test\nReport", fillcolor=lightblue];

        p6_structural -> p6_functional -> p6_clarity -> p6_antipatterns -> p6_report;
    }

    // Phase 7: Quality Review
    subgraph cluster_phase7 {
        label="Phase 7: Quality Review\nAgent: reviewer";
        fillcolor=lightyellow;
        style=filled;

        p7_validation [label="Review Validation\nResults", fillcolor=lightblue];
        p7_alignment [label="Assess Intent\nAlignment", fillcolor=lightblue];
        p7_readiness [label="Evaluate\nProduction Readiness", fillcolor=lightblue];
        p7_consistency [label="Self-Consistency\nMeta-Review", fillcolor=lightblue];
        p7_decision [label="Make Deployment\nDecision", fillcolor=lightblue];

        p7_validation -> p7_alignment -> p7_readiness -> p7_consistency -> p7_decision;
    }

    // Decision points
    quality_acceptable [
        shape=diamond,
        label="Quality\nAcceptable?",
        fillcolor=yellow
    ];

    revision_needed [
        shape=octagon,
        label="STOP:\nRevision Required",
        fillcolor=orange
    ];

    // Memory coordination
    memory_store [
        shape=cylinder,
        label="Memory Store\ncoordination/skill-forge/*",
        fillcolor=lightcoral
    ];

    // Validation script
    validation_script [
        shape=cylinder,
        label="Validation Script\nvalidate_skill.py",
        fillcolor=lightcoral
    ];

    // Packaging script
    packaging_script [
        shape=cylinder,
        label="Packaging Script\npackage_skill.py",
        fillcolor=lightcoral
    ];

    // Main sequential flow
    start -> p1_analyze [lhead=cluster_phase1];
    p1_document -> p2_examples [ltail=cluster_phase1, lhead=cluster_phase2];
    p2_schemas -> p3_disclosure [ltail=cluster_phase2, lhead=cluster_phase3];
    p3_metadata -> p4_frontmatter [ltail=cluster_phase3, lhead=cluster_phase4];
    p4_examples -> p5_scripts [ltail=cluster_phase4, lhead=cluster_phase5];
    p5_document -> p6_structural [ltail=cluster_phase5, lhead=cluster_phase6];
    p6_report -> p7_validation [ltail=cluster_phase6, lhead=cluster_phase7];

    // Decision flow
    p7_decision -> quality_acceptable;
    quality_acceptable -> end [label="APPROVE", color=green, penwidth=2];
    quality_acceptable -> revision_needed [label="REQUIRE\nREVISION", color=red];

    // Iteration loop
    revision_needed -> p4_frontmatter [
        label="iterate from\nidentified phase",
        style=dashed,
        color=orange,
        lhead=cluster_phase4
    ];

    // Memory coordination flows (dashed lines)
    p1_document -> memory_store [style=dashed, label="store", dir=both];
    p2_schemas -> memory_store [style=dashed, label="store", dir=both];
    p3_metadata -> memory_store [style=dashed, label="store", dir=both];
    p4_examples -> memory_store [style=dashed, label="store", dir=both];
    p5_document -> memory_store [style=dashed, label="store", dir=both];
    p6_report -> memory_store [style=dashed, label="store", dir=both];
    p7_decision -> memory_store [style=dashed, label="store", dir=both];

    // Script usage
    p6_structural -> validation_script [style=dashed, label="uses"];
    p7_decision -> packaging_script [style=dashed, label="uses\n(if approved)"];

    // Diagram metadata
    labelloc="t";
    label="Skill Forge SOP: 7-Phase Agent-Orchestrated Skill Engineering";
    fontsize=18;
    fontname="Arial Bold";
}
