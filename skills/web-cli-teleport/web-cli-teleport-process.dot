digraph WebCliTeleport {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start
    start [shape=ellipse, label="Start:\nUser Has Task", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nTask Finished\nOptimal Interface", fillcolor=green, fontcolor=white];

    // Task Analysis
    subgraph cluster_analysis {
        label="Task Analysis";
        fillcolor=lightyellow;
        style=filled;

        analyze_complexity [label="Analyze Task\nComplexity"];
        analyze_iteration [label="Estimate\nIteration Needs"];
        analyze_location [label="Check User\nLocation"];
        analyze_testing [label="Assess Testing\nRequirements"];

        analyze_complexity -> analyze_iteration -> analyze_location -> analyze_testing;
    }

    // Interface Decision
    interface_decision [shape=diamond, label="Optimal\nInterface?", fillcolor=yellow];

    // Web Path
    subgraph cluster_web {
        label="Web Execution Path";
        fillcolor=lightblue;
        style=filled;

        web_start [label="Start on\nclaud.ai/code"];
        web_execute [label="Execute Task\nin Cloud"];
        web_notify [label="User Notified\nWhen Complete"];
        web_review [label="Review PR\nDiff"];

        web_start -> web_execute -> web_notify -> web_review;
    }

    // CLI Path
    subgraph cluster_cli {
        label="CLI Execution Path";
        fillcolor=lightgreen;
        style=filled;

        cli_start [label="Start Local\nCLI Session"];
        cli_execute [label="Execute with\nFull Tooling"];
        cli_test [label="Local Testing\n& Debugging"];
        cli_review [label="Inline Diff\nReview"];

        cli_start -> cli_execute -> cli_test -> cli_review;
    }

    // Mobile Path
    subgraph cluster_mobile {
        label="Mobile Planning Path";
        fillcolor=lightsalmon;
        style=filled;

        mobile_plan [label="Plan on\niOS App"];
        mobile_approve [label="Review\nProgress"];

        mobile_plan -> mobile_approve;
    }

    // Complexity Check During Execution
    complexity_check [shape=diamond, label="Task More\nComplex Than\nExpected?", fillcolor=orange];

    // Teleport Decision
    teleport_decision [shape=diamond, label="Teleport\nto CLI?", fillcolor=yellow];

    // Teleport Process
    subgraph cluster_teleport {
        label="Session Teleportation";
        fillcolor=lightcyan;
        style=filled;

        teleport_click [label="User Clicks\n'Open in CLI'"];
        teleport_clean [label="Clean Local\nGit State"];
        teleport_run [label="Run: claude\n--teleport <id>"];
        teleport_load [label="Load Full Context\n(~50% window)"];

        teleport_click -> teleport_clean -> teleport_run -> teleport_load;
    }

    // Continue on CLI after teleport
    continue_cli [label="Continue Work\nwith CLI Tools", fillcolor=lightgreen];

    // Final Review Decision
    final_review [shape=diamond, label="Create\nPR?", fillcolor=yellow];

    // PR Creation
    create_pr [label="Create Pull\nRequest", fillcolor=lightblue];

    // Flow
    start -> analyze_complexity;
    analyze_testing -> interface_decision;

    interface_decision -> web_start [label="simple\nwell-defined"];
    interface_decision -> cli_start [label="complex\niterative"];
    interface_decision -> mobile_plan [label="planning\non-the-go"];

    web_review -> complexity_check;
    complexity_check -> teleport_decision [label="yes"];
    complexity_check -> final_review [label="no"];

    mobile_approve -> teleport_decision [label="implement"];

    teleport_decision -> teleport_click [label="yes"];
    teleport_decision -> web_review [label="no\nstay on web"];

    teleport_load -> continue_cli;

    cli_review -> final_review;
    continue_cli -> final_review;

    final_review -> create_pr [label="yes"];
    final_review -> end [label="no\nlocal only"];

    create_pr -> end;

    // External references
    decision_matrix [shape=cylinder, label="Decision Matrix:\n- Task Complexity\n- Iteration Needs\n- Testing Required\n- Location", fillcolor=lightcoral];
    interface_decision -> decision_matrix [style=dashed, label="uses"];

    // Warning about git state
    git_warning [shape=octagon, label="STOP:\nClean Git\nState Required", fillcolor=orange];
    teleport_clean -> git_warning [style=dashed, label="if dirty"];
    git_warning -> teleport_clean [label="stash/commit", style=dashed];

    labelloc="t";
    label="Web-CLI Teleport: Optimal Interface Selection & Session Handoff";
    fontsize=16;
    fontname="Arial Bold";
}
