digraph I18nAutomation {
    rankdir=TB;
    compound=true;
    node [shape=box, style=filled, fontname="Arial"];
    edge [fontname="Arial"];

    // Start
    start [shape=ellipse, label="Start:\nInternationalization\nNeeded", fillcolor=lightgreen];
    end [shape=ellipse, label="Complete:\nFully Localized\nApplication", fillcolor=green, fontcolor=white];

    // Project Analysis
    subgraph cluster_analysis {
        label="Project Analysis";
        fillcolor=lightyellow;
        style=filled;

        detect_framework [label="Detect\nFramework"];
        check_existing [label="Check Existing\ni18n Setup"];
        identify_content [label="Identify Content\nto Translate"];

        detect_framework -> check_existing -> identify_content;
    }

    // Library Selection
    library_decision [shape=diamond, label="Framework?", fillcolor=yellow];

    select_nextintl [label="Select:\nnext-intl", fillcolor=lightblue];
    select_reacti18next [label="Select:\nreact-i18next", fillcolor=lightblue];
    select_vuei18n [label="Select:\nvue-i18n", fillcolor=lightblue];

    // Architecture Design
    subgraph cluster_architecture {
        label="i18n Architecture Design";
        fillcolor=lightcyan;
        style=filled;

        design_keys [label="Design Key\nNaming Structure"];
        design_organization [label="Design File\nOrganization"];
        plan_routing [label="Plan Locale\nRouting Strategy"];

        design_keys -> design_organization -> plan_routing;
    }

    // Content Extraction
    subgraph cluster_extraction {
        label="Content Extraction";
        fillcolor=lightgreen;
        style=filled;

        scan_components [label="Scan Components\nfor Strings"];
        generate_keys [label="Generate\nTranslation Keys"];
        create_skeleton [label="Create Skeleton\nLocale Files"];

        scan_components -> generate_keys -> create_skeleton;
    }

    // Translation Strategy
    translation_decision [shape=diamond, label="Translation\nStrategy?", fillcolor=yellow];

    ai_translate [label="AI Translation\n(Fast, MVP)", fillcolor=lightblue];
    professional_translate [label="Professional\nTranslation Service", fillcolor=lightgreen];
    hybrid_translate [label="Hybrid:\nAI + Review", fillcolor=lightsalmon];

    // Translation Execution
    subgraph cluster_translation {
        label="Translation Execution";
        fillcolor=lightblue;
        style=filled;

        translate_content [label="Translate\nAll Strings"];
        handle_plurals [label="Handle\nPluralization"];
        preserve_placeholders [label="Preserve\nPlaceholders"];
        format_dates [label="Format Dates/\nNumbers"];

        translate_content -> handle_plurals -> preserve_placeholders -> format_dates;
    }

    // RTL Check
    rtl_check [shape=diamond, label="RTL Languages\nIncluded?", fillcolor=yellow];

    // RTL Setup
    subgraph cluster_rtl {
        label="RTL Support Setup";
        fillcolor=lightsalmon;
        style=filled;

        setup_rtl_css [label="Set Up RTL\nCSS Properties"];
        mirror_layouts [label="Mirror UI\nLayouts"];
        test_rtl [label="Test RTL\nRendering"];

        setup_rtl_css -> mirror_layouts -> test_rtl;
    }

    skip_rtl [label="Skip RTL\nSetup", fillcolor=lightgray];

    // Installation
    subgraph cluster_installation {
        label="Library Installation & Config";
        fillcolor=lightgreen;
        style=filled;

        install_packages [label="Install i18n\nPackages"];
        create_config [label="Create\nConfiguration"];
        setup_routing [label="Set Up Locale\nRouting"];

        install_packages -> create_config -> setup_routing;
    }

    // Code Updates
    subgraph cluster_code_updates {
        label="Code Updates";
        fillcolor=lightblue;
        style=filled;

        replace_strings [label="Replace Hardcoded\nStrings with t()"];
        add_switcher [label="Add Language\nSwitcher Component"];
        update_imports [label="Update Component\nImports"];

        replace_strings -> add_switcher -> update_imports;
    }

    // SEO Configuration
    subgraph cluster_seo {
        label="SEO & Metadata";
        fillcolor=lightcyan;
        style=filled;

        translate_metadata [label="Translate\nMetadata"];
        setup_hreflang [label="Set Up\nhreflang Tags"];
        create_sitemap [label="Create Localized\nSitemap"];

        translate_metadata -> setup_hreflang -> create_sitemap;
    }

    // Validation
    subgraph cluster_validation {
        label="Validation & Testing";
        fillcolor=lightyellow;
        style=filled;

        test_each_locale [label="Test Each\nLocale"];
        verify_keys [label="Verify All Keys\nPresent"];
        test_switcher [label="Test Language\nSwitcher"];
        check_seo [label="Check SEO\nMetadata"];

        test_each_locale -> verify_keys -> test_switcher -> check_seo;
    }

    // Quality Check
    quality_check [shape=diamond, label="All Validations\nPass?", fillcolor=yellow];

    // Warning for missing translations
    missing_warning [shape=octagon, label="WARNING:\nMissing\nTranslations", fillcolor=orange];

    // Documentation
    document [label="Create Usage\nDocumentation", fillcolor=lightblue];

    // Flow
    start -> detect_framework;
    identify_content -> library_decision;

    library_decision -> select_nextintl [label="Next.js"];
    library_decision -> select_reacti18next [label="React"];
    library_decision -> select_vuei18n [label="Vue"];

    select_nextintl -> design_keys [lhead=cluster_architecture];
    select_reacti18next -> design_keys [lhead=cluster_architecture];
    select_vuei18n -> design_keys [lhead=cluster_architecture];

    plan_routing -> scan_components [lhead=cluster_extraction];
    create_skeleton -> translation_decision;

    translation_decision -> ai_translate [label="ai"];
    translation_decision -> professional_translate [label="professional"];
    translation_decision -> hybrid_translate [label="hybrid"];

    ai_translate -> translate_content [lhead=cluster_translation];
    professional_translate -> translate_content [lhead=cluster_translation];
    hybrid_translate -> translate_content [lhead=cluster_translation];

    format_dates -> rtl_check;

    rtl_check -> setup_rtl_css [label="yes\n(ar, he, fa)", lhead=cluster_rtl];
    rtl_check -> skip_rtl [label="no"];

    test_rtl -> install_packages [lhead=cluster_installation];
    skip_rtl -> install_packages [lhead=cluster_installation];

    setup_routing -> replace_strings [lhead=cluster_code_updates];
    update_imports -> translate_metadata [lhead=cluster_seo];

    create_sitemap -> test_each_locale [lhead=cluster_validation];
    check_seo -> quality_check;

    quality_check -> document [label="yes", color=green];
    quality_check -> missing_warning [label="no"];
    missing_warning -> translate_content [label="fix translations", style=dashed];

    document -> end;

    // External References
    frameworks [shape=folder, label="Supported:\n- Next.js (next-intl)\n- React (react-i18next)\n- Vue (vue-i18n)", fillcolor=lightyellow];
    library_decision -> frameworks [style=dashed, label="references"];

    rtl_languages [shape=cylinder, label="RTL Languages:\n- Arabic (ar)\n- Hebrew (he)\n- Persian (fa)", fillcolor=lightcoral];
    rtl_check -> rtl_languages [style=dashed, label="checks"];

    key_structure [shape=folder, label="Key Structure:\nnamespace.section.item\nExample:\nlanding.hero.title", fillcolor=lightyellow];
    design_keys -> key_structure [style=dashed, label="follows"];

    labelloc="t";
    label="i18n Automation: Complete Internationalization Workflow";
    fontsize=16;
    fontname="Arial Bold";
}
